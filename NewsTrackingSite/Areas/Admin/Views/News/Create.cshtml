@model NewsTrackingSite.Models.News

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

    MultiSelectList genreList = ViewData["GenreList"] as MultiSelectList;
    MultiSelectList directorList = ViewData["DirectorList"] as MultiSelectList;
    MultiSelectList actorList = ViewData["ActorList"] as MultiSelectList;    
}

@section additionalJs {
    <style type="text/css" media="all">
        /* fix rtl for demo */
        .chosen-rtl .chosen-drop {
            left: -9000px;
        }
    </style>

    <script type="text/javascript">
        var config = {
          '.chosen-select'           : {},
          '.chosen-select-deselect'  : {allow_single_deselect:true},
          '.chosen-select-no-single' : {disable_search_threshold:10},
          '.chosen-select-no-results': {no_results_text:'Oops, nothing found!'},
          '.chosen-select-width'     : {width:"95%"}
        }
        for (var selector in config) {
          $(selector).chosen(config[selector]);
        }
    </script>
}


<h2>Create</h2>

@using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <input type="file" name="file" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseCountry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ReleaseCountry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseCountry, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrailerLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TrailerLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrailerLink, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Raiting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Raiting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Raiting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Budget, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Tür", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.ListBox("GenreList", genreList, new { @class = "chosen-select", style = "padding-right: 29.7%" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Yönetmen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.ListBox("DirectorList", directorList, new { @class = "chosen-select", style = "padding-right: 40%" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Oyuncular", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.ListBox("ActorList", actorList, new { @class = "chosen-select", style = "padding-right: 40%" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-7">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
